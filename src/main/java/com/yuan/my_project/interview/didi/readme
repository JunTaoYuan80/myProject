1、AOP、拦截器、过滤器(filter)的区别及实现原理
拦截器和过滤器的区别：
　　1、拦截器是基于java的反射机制，过滤器是基于java的函数回调
　　2、拦截器不依赖于servlet容器，而过滤器依赖于servlet容器
　　3、拦截器只能对action请求起作用，过滤器几乎对所有的请求起作用
　　4、拦截器可以访问action上下文，值栈里的对象，而过滤器不能访问
　　5、在action生命周期中，拦截器可以被多次调用，过滤器只能在servlet初始化时调用一次
　　6、拦截器可以获取IOC容器中的各个bean，过滤器不行，在拦截器中注入一个service可以调用逻辑业务
过滤器：
Servlet中的过滤器Filter是实现了javax.servlet.Filter接口的服务器端程序，主要的用途是过滤字符编码、做一些业务逻辑判断等。其工作原理是，只要你在web.xml文件配置好要拦截的客户端请求，它都会帮你拦截到请求，此时你就可以对请求或响应(Request、Response)统一设置编码，简化操作；同时还可进行逻辑判断，如用户是否已经登陆、有没有权限访问该页面等等工作。它是随你的web应用启动而启动的，只初始化一次，以后就可以拦截相关请求，只有当你的web应用停止或重新部署的时候才销毁

拦截器：
拦截器是在面向切面编程中应用的，就是在你的service或者一个方法前调用一个方法，或者在方法后调用一个方法。是基于JAVA的反射机制。拦截器不是在web.xml，比如struts在struts.xml中配置，
2、LRUCache的实现
使用LinkedHashMap

3、zookeeper的分布式队列、选举策略、分布式锁、节点类型

4、系统怎么优化
代码层面、机器层面




